#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{listings,xcolor,courier,bookmark}
\usepackage{listingsutf8}
\definecolor{darkblue}{named}{blue}
\definecolor{darkred}{named}{red}
\definecolor{grau}{named}{gray}
\let\Righttorque\relax
\lstset{
captionpos=b,
commentstyle=\color[rgb]{0.133,0.545,0.133},
keywordstyle=\color{darkblue},
stringstyle=\color{darkred},
extendedchars=true,
basicstyle=\small\ttfamily,
showstringspaces=false,
tabsize=2,
numbers=left,
numberstyle=\tiny,
breakautoindent  = true,
breakindent      = 2em,
breaklines       = true,
postbreak        = ,
prebreak         = \raisebox{-.8ex}[0ex][0ex]{\Righttorque},
showspaces=false, 
showtabs=false, 
showstringspaces=false,
language=VHDL,
frame=single,
morecomment=[s]{--}
}


\renewcommand*{\lstlistingname}{Codice Componente}


\usepackage{fancyhdr}
\pagestyle{fancy}

\fancyhead{} 
\fancyfoot{} 

\fancyhead[RO,LE]{\bfseries \leftmark}
\fancyfoot[LE,RO]{\thepage}
\fancyfoot[LO,CE]{Tesina in ASE: Architetture dei Sistemi di Elaborazione}
\renewcommand{\headrulewidth}{0.4pt}
\renewcommand{\footrulewidth}{0.4pt}

\date{}
\cfoot{}
\end_preamble
\use_default_options true
\master Tesina.lyx
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2.5cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection
Soluzione
\end_layout

\begin_layout Standard
Al fine di scegliere l'ampiezza temporale per effettuare l'analisi del file
 di log forniti, è stato eseguito lo script 
\shape italic
tupleCount_func_CWINpy.sh
\shape default
 per entrambi i file.
 I risultati ottenuti sono riportati sui seguenti grafici.
\end_layout

\begin_layout Standard
*GRAFICO MERCURY*
\end_layout

\begin_layout Standard
Per quanto riguarda il file di log 
\shape italic
MercuryErrorLog.txt
\shape default
, si può osservare che a curva presenta un ginocchio; la scelta dell'ampiezza
 della finestra è guidata dalla necessità di catturare il maggior numero
 di tuple che siano relative allo stesso fault con la minore ampiezza della
 finestra temporale possibile.
 Dunque si è optato di scegliere un valore della finestra, prossimo al ginocchio
, di 360 secondi che cattura 440 tuple.
\end_layout

\begin_layout Standard
*GRAFICO BGL*
\end_layout

\begin_layout Standard
Nel caso del file 
\shape italic
BGLErrorLog.txt
\shape default
, è possibile osservare come il ginocchio della curva sia meno definito;
 dunque si è optato di scegliere un valore della finestra che non fosse
 troppo elevato, in quanto è sempre preferibile avere troncamenti piuttosto
 che fallimenti.
 Il valore scelto è di 420 secondi che cattura 369 tuple.
\end_layout

\begin_layout Standard
Dopo aver scelto il valore di ampiezza per la finestra di coalescenza, viene
 effettuato l’effettivo raggruppamento, lanciando lo script 
\shape italic
tupling_with_CWIN.sh
\shape default
 con parametro il log per cui raggruppare le tuple e il valore di ampiezza
 scelto.
 Lo script ha creato un file per ciascuna tupla creata raggruppando le entries
 del log e tre file denominati 
\shape italic
startingPoints.txt
\shape default
, 
\shape italic
lengths.txt
\shape default
, 
\shape italic
interarrivals.txt
\shape default
 contenenti ciascuno un numero di righe pari al numero di tuple generato,
 corrispondenti al timestamp relativo all’inizio della tupla (
\shape italic
startingPoints
\shape default
), alla lunghezza della tupla considerata (
\shape italic
lengths
\shape default
) e al tempo che inter- corre tra la tupla i-esima e la successiva (
\shape italic
interarrivals
\shape default
).
 Proprio questi ultimi valori sono di interesse per calcolare la reliability
 del sistema, in particolare considerando che il tempo tra una tupla e la
 successiva altro non è che il TTF "sperimentale" (a meno di collisioni
 e troncamenti).
 Grazie al tool statistico di MATLAB, si possono ottenere le distribuzioni
 di reliability empiriche: con la seguente funzione si effettua il calcolo
 della CDF empirica e il fit per i modelli esponenziale, weibull ed iperesponenz
iale:
\end_layout

\end_body
\end_document
